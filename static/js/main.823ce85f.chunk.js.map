{"version":3,"sources":["redux/contacts/contactsActions.js","redux/contacts/contactsOperations.js","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","redux/contacts/contactsSelectors.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App.js","redux/contacts/contactsReducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["addContactsRequest","createAction","addContactsSuccess","addContactsError","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","removeContactRequest","removeContactSuccess","removeContactError","changeFilter","axios","defaults","baseURL","addContact","name","number","dispatch","contactsActions","post","then","data","catch","error","fetchContacts","get","removeContact","id","delete","ContactForm","state","handleSubmit","e","preventDefault","props","onAddContact","setState","handlechange","target","value","onSubmit","this","className","styles","ContactForm_label","type","onChange","ContactForm_input","placeholder","ContactForm_btn","Component","mapDispatchToProps","contactsOperations","connect","ownprops","onRemove","ContactList_item","onClick","ContactList_item_btn","getFilter","contacts","filter","getVisibleTasks","createSelector","items","contact","toLowerCase","includes","ContactList","map","prototype","PropTypes","arrayOf","exact","string","isRequired","onRemoveContact","func","contactsSelectors","Filter","onChangeFilter","App","onFetchContacts","createReducer","action","payload","task","combineReducers","defaultMiddleware","getDefaultMiddleware","store","configureStore","reducer","contactsReducer","middleware","ReactDOM","render","document","querySelector","module","exports"],"mappings":"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","file":"static/js/main.823ce85f.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nconst addContactsRequest = createAction(\"contacts/addRequest\");\nconst addContactsSuccess = createAction(\"contacts/addSuccess\");\nconst addContactsError = createAction(\"contacts/addError\");\n\nconst fetchContactsRequest = createAction(\"contacts/fetchRequest\");\nconst fetchContactsSuccess = createAction(\"contacts/fetchSuccess\");\nconst fetchContactsError = createAction(\"contacts/fetchError\");\n\nconst removeContactRequest = createAction(\"contacts/removeRequest\");\nconst removeContactSuccess = createAction(\"contacts/removeSuccess\");\nconst removeContactError = createAction(\"contacts/removeError\");\n\nconst changeFilter = createAction(\"contacts/changeFilter\");\n\nexport default {\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n\n  removeContactRequest,\n  removeContactSuccess,\n  removeContactError,\n\n  changeFilter,\n};\n","import axios from \"axios\";\nimport contactsActions from \"./contactsActions\";\n\naxios.defaults.baseURL = \"http://localhost:2000\";\n\nconst addContact = (name, number) => (dispatch) => {\n  dispatch(contactsActions.addContactsRequest());\n\n  axios\n    .post(\"/contacts\", { name, number })\n    .then(({ data }) => {\n      dispatch(contactsActions.addContactsSuccess(data));\n    })\n    .catch((error) => {\n      dispatch(contactsActions.addContactsError(error));\n    });\n};\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(contactsActions.fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(contactsActions.fetchContactsSuccess(data)))\n    .catch((error) => dispatch(contactsActions.fetchContactsError(error)));\n};\n\nconst removeContact = (id) => (dispatch) => {\n  dispatch(contactsActions.removeContactRequest());\n\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(contactsActions.removeContactSuccess(id)))\n    .catch((error) => dispatch(contactsActions.removeContactError(error)));\n};\n\nexport default {\n  addContact,\n  fetchContacts,\n  removeContact,\n};\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactForm.module.css\";\nimport PropTypes from \"prop-types\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onAddContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  handlechange = (e) => {\n    const { name } = e.target;\n\n    this.setState({ [name]: e.target.value });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.ContactForm}>\n        <label className={styles.ContactForm_label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handlechange}\n            className={styles.ContactForm_input}\n          />\n        </label>\n\n        <label className={styles.ContactForm_label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handlechange}\n            placeholder=\"Example +380440000000\"\n            className={styles.ContactForm_input}\n          />\n        </label>\n\n        <button type=\"submit\" className={styles.ContactForm_btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onAddContact: contactsOperations.addContact,\n};\n\nContactForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"./ContactList.module.css\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\nimport PropTypes from \"prop-types\";\n\nconst ContactListItem = ({ name, number, id, onRemove }) => (\n  <li className={styles.ContactList_item}>\n    <p>\n      - {name}: {number}\n    </p>\n    <button\n      type=\"button\"\n      onClick={onRemove}\n      className={styles.ContactList_item_btn}\n    >\n      Delete\n    </button>\n  </li>\n);\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch, ownprops) => ({\n  onRemove: () => dispatch(contactsOperations.removeContact(ownprops.id)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactListItem);\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getFilter = (state) => state.contacts.filter;\nconst getContacts = (state) => state.contacts.items;\n\nconst getVisibleTasks = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n\nexport default {\n  getFilter,\n  getVisibleTasks,\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ContactListItem from \"./ContactListItem\";\nimport styles from \"./ContactList.module.css\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nconst ContactList = ({ contacts }) => (\n  <ul className={styles.ContactList}>\n    {contacts.map(({ id, name, number }) => (\n      <ContactListItem key={id} name={name} number={number} id={id} />\n    ))}\n  </ul>\n);\n\nContactList.prototype = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onRemoveContact: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getVisibleTasks(state),\n});\n\nexport default connect(mapStateToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport contactsActions from \"../../redux/contacts/contactsActions\";\nimport contactsSelectors from \"../../redux/contacts/contactsSelectors\";\n\nconst Filter = ({ value, onChangeFilter }) => {\n  return (\n    <div>\n      <p>Find contacts by name</p>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChangeFilter(e.target.value)}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = {\n  onChangeFilter: contactsActions.changeFilter,\n};\n\nFilter.prototype = {\n  value: PropTypes.string.isRequired,\n  onChangeFilter: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport contactsOperations from \"../redux/contacts/contactsOperations\";\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onFetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>PhoneBook</h1>\n        <ContactForm />\n        <Filter />\n        <h2>Contacts</h2>\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onFetchContacts: contactsOperations.fetchContacts,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport contactsActions from \"./contactsActions\";\n\nconst addContact = (state, action) => {\n  return [...state, action.payload];\n};\n\nconst removeContact = (state, action) => {\n  return state.filter((contact) => contact.id !== action.payload);\n};\n\nconst changeFilter = (state, action) => {\n  return state.filter((task) => task.id !== action.payload);\n};\n\nconst items = createReducer([], {\n  [contactsActions.addContactsSuccess]: addContact,\n  [contactsActions.fetchContactsSuccess]: (state, action) => action.payload,\n  [contactsActions.removeContactSuccess]: removeContact,\n  [contactsActions.changeFilter]: changeFilter,\n});\n\nconst filter = createReducer(\"\", {\n  [contactsActions.changeFilter]: (state, action) => action.payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst defaultMiddleware = getDefaultMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n\n  middleware: [...defaultMiddleware],\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./components/App\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactForm\":\"ContactForm_ContactForm__1zvAA\",\"ContactForm_label\":\"ContactForm_ContactForm_label__3P8Ek\",\"ContactForm_input\":\"ContactForm_ContactForm_input__2HggA\",\"ContactForm_btn\":\"ContactForm_ContactForm_btn__2DSYP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"ContactList_ContactList__4TvGi\",\"ContactList_item\":\"ContactList_ContactList_item__1wR0Z\",\"ContactList_item_btn\":\"ContactList_ContactList_item_btn__yspio\"};"],"sourceRoot":""}